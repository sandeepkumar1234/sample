for this process we have to add rules in the security group ---- all traffic 
Setup  Kubernetes cluster  on Ubuntu 20.04
----------------------------------
1. Set up Docker
   sudo apt update
   sudo apt install docker.io -y
   sudo systemctl enable docker
   sudo systemctl status docker
2. Install Kubernetes
   sudo apt-get update
   sudo apt-get install -y apt-transport-https ca-certificates curl gpg
   curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
   sudo apt-get update
   sudo apt-get install -y kubelet kubeadm kubectl
   sudo systemctl enable --now kubelet
   sudo apt-mark hold kubelet kubeadm kubectl
   kubeadm version
3. Deploy Kubernetes
   sudo swapoff -a
   sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
   sudo vim /etc/modules-load.d/containerd.conf
   Add the following two lines: overlay
				 br_netfilter
   sudo modprobe overlay
   sudo modprobe br_netfilter
   sudo vim /etc/sysctl.d/kubernetes.conf
   Add the following lines: 
   net.bridge.bridge-nf-call-ip6tables = 1
   net.bridge.bridge-nf-call-iptables = 1
   net.ipv4.ip_forward = 1
   sudo sysctl --system
4. Assign Unique Hostname for Each Server Node 
   sudo hostnamectl set-hostname master-node
   sudo hostnamectl set-hostname worker-node01
   
5. Initialize Kubernetes on Master Node
   sudo vim /etc/default/kubelet
   KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs"
   sudo systemctl daemon-reload
   sudo systemctl restart kubelet
   sudo vim /etc/docker/daemon.json
   Append the following configuration block:

    {
      "exec-opts": ["native.cgroupdriver=systemd"],
      "log-driver": "json-file",
      "log-opts": {
      "max-size": "100m"
   },

       "storage-driver": "overlay2"
       }
       
   sudo systemctl daemon-reload
   sudo systemctl restart docker
   sudo kubeadm init --pod-network-cidr=10.244.0.0/16
   mkdir -p $HOME/.kube
   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   sudo chown $(id -u):$(id -g) $HOME/.kube/config
6. Deploy Pod Network to Cluster
   kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml    kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml
   kubectl taint nodes --all node-role.kubernetes.io/control-plane-
7. Join Worker Node to Cluster
   sudo systemctl stop apparmor
   sudo systemctl disable apparmor
   sudo systemctl restart containerd.service
   kubeadm join [master-node-ip]:6443 --token abcdef.1234567890abcdef --discovery-token-ca-cert-hash sha256:1234..cdef
   kubectl get nodes
